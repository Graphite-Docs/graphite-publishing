{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Array.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","yArray","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","extend","Y","YArray","_Y$utils$CustomType","os","_model","_content","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","_parent","_deepEventHandler","utils","EventListenerHandler","eventHandler","EventHandler","op","struct","some","c","compareIds","id","pos","left","findIndex","values","hasOwnProperty","splice","type","opContent","getType","contents","content","map","val","apply","concat","slice","bubbleEvent","object","index","inDeletionRange","delLength","target","_values","_inherits","_createClass","key","value","childId","destroy","_this2","x","insert","Array","isArray","mostLeft","ops","prevId","typeDefinition","origin","parent","isTypeDefinition","push","getNextOpId","typeid","createType","requestTransaction","regeneratorRuntime","mark","_callee","mostRight","ml","j","wrap","_context","prev","next","delegateYield","getInsertionCleanEnd","t0","right","getOperation","t1","start","awaitOps","applyCreatedOperations","stop","awaitAndPrematurelyCall","dels","targetId","_callee2","_context2","addEventListener","removeEventListener","_changed","transaction","_context3","deleted","getInsertion","abrupt","store","initType","receivedOp","get","CustomType","CustomTypeDefinition","name","class","YArrayInitializer","model","_types","_context4","Struct","List","forEach"],"mappings":"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","file":"y-array.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  class YArray extends Y.utils.CustomType {\n    constructor (os, _model, _content) {\n      super()\n      this.os = os\n      this._model = _model\n      // Array of all the neccessary content\n      this._content = _content\n\n      // the parent of this type\n      this._parent = null\n      this._deepEventHandler = new Y.utils.EventListenerHandler()\n\n      // this._debugEvents = [] // TODO: remove!!\n      this.eventHandler = new Y.utils.EventHandler((op) => {\n        // this._debugEvents.push(JSON.parse(JSON.stringify(op)))\n        if (op.struct === 'Insert') {\n          // when using indexeddb db adapter, the op could already exist (see y-js/y-indexeddb#2)\n          if (this._content.some(function (c) { return Y.utils.compareIds(c.id, op.id) })) {\n            // op exists\n            return\n          }\n          let pos\n          // we check op.left only!,\n          // because op.right might not be defined when this is called\n          if (op.left === null) {\n            pos = 0\n          } else {\n            pos = 1 + this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.left)\n            })\n            if (pos <= 0) {\n              throw new Error('Unexpected operation!')\n            }\n          }\n          /* (see above for new approach)\n          var _e = this._content[pos]\n          // when using indexeddb db adapter, the op could already exist (see y-js/y-indexeddb#2)\n          // If the algorithm works correctly, the double should always exist on the correct position (pos - the computed destination)\n          if (_e != null && Y.utils.compareIds(_e.id, op.id)) {\n            // is already defined\n            return\n          }*/\n          var values\n          var length\n          if (op.hasOwnProperty('opContent')) {\n            this._content.splice(pos, 0, {\n              id: op.id,\n              type: op.opContent\n            })\n            length = 1\n            let type = this.os.getType(op.opContent)\n            type._parent = this._model\n            values = [type]\n          } else {\n            var contents = op.content.map(function (c, i) {\n              return {\n                id: [op.id[0], op.id[1] + i],\n                val: c\n              }\n            })\n            // insert value in _content\n            // It is not possible to insert more than ~2^16 elements in an Array (see #5). We handle this case explicitly\n            if (contents.length < 30000) {\n              this._content.splice.apply(this._content, [pos, 0].concat(contents))\n            } else {\n              this._content = this._content.slice(0, pos).concat(contents).concat(this._content.slice(pos))\n            }\n            values = op.content\n            length = op.content.length\n          }\n          Y.utils.bubbleEvent(this, {\n            type: 'insert',\n            object: this,\n            index: pos,\n            values: values,\n            length: length\n          })\n        } else if (op.struct === 'Delete') {\n          var i = 0 // current position in _content\n          for (; i < this._content.length && op.length > 0; i++) {\n            var c = this._content[i]\n            if (Y.utils.inDeletionRange(op, c.id)) {\n              // is in deletion range!\n              var delLength\n              // check how many character to delete in one flush\n              for (delLength = 1;\n                    delLength < op.length && i + delLength < this._content.length && Y.utils.inDeletionRange(op, this._content[i + delLength].id);\n                    delLength++) {}\n              // last operation that will be deleted\n              c = this._content[i + delLength - 1]\n              // update delete operation\n              op.length -= c.id[1] - op.target[1] + 1\n              op.target = [c.id[0], c.id[1] + 1]\n              // apply deletion & find send event\n              let content = this._content.splice(i, delLength)\n              let values = content.map((c) => {\n                if (c.val != null) {\n                  return c.val\n                } else {\n                  return this.os.getType(c.type)\n                }\n              })\n              Y.utils.bubbleEvent(this, {\n                type: 'delete',\n                object: this,\n                index: i,\n                values: values,\n                _content: content,\n                length: delLength\n              })\n              // with the fresh delete op, we can continue\n              // note: we don't have to increment i, because the i-th content was deleted\n              // but on the other had, the (i+delLength)-th was not in deletion range\n              // So we don't do i--\n            }\n          }\n        } else {\n          throw new Error('Unexpected struct!')\n        }\n      })\n    }\n    _getPathToChild (childId) {\n      return this._content.findIndex(c =>\n        c.type != null && Y.utils.compareIds(c.type, childId)\n      )\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this._content = null\n      this._model = null\n      this._parent = null\n      this.os = null\n    }\n    get length () {\n      return this._content.length\n    }\n    get (pos) {\n      if (pos == null || typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos >= this._content.length) {\n        return undefined\n      }\n      if (this._content[pos].type == null) {\n        return this._content[pos].val\n      } else {\n        return this.os.getType(this._content[pos].type)\n      }\n    }\n    toArray () {\n      return this._content.map((x, i) => {\n        if (x.type != null) {\n          return this.os.getType(x.type)\n        } else {\n          return x.val\n        }\n      })\n    }\n    push (contents) {\n      return this.insert(this._content.length, contents)\n    }\n    insert (pos, contents) {\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (!Array.isArray(contents)) {\n        throw new Error('contents must be an Array of objects!')\n      }\n      if (contents.length === 0) {\n        return\n      }\n      if (pos > this._content.length || pos < 0) {\n        throw new Error('This position exceeds the range of the array!')\n      }\n      var mostLeft = pos === 0 ? null : this._content[pos - 1].id\n\n      var ops = []\n      var prevId = mostLeft\n      for (var i = 0; i < contents.length;) {\n        var op = {\n          left: prevId,\n          origin: prevId,\n          // right: mostRight,\n          // NOTE: I intentionally do not define right here, because it could be deleted\n          // at the time of inserting this operation (when we get the transaction),\n          // and would therefore not defined in this._content\n          parent: this._model,\n          struct: 'Insert'\n        }\n        var _content = []\n        var typeDefinition\n        while (i < contents.length) {\n          var val = contents[i++]\n          typeDefinition = Y.utils.isTypeDefinition(val)\n          if (!typeDefinition) {\n            _content.push(val)\n          } else if (_content.length > 0) {\n            i-- // come back again later\n            break\n          } else {\n            break\n          }\n        }\n        if (_content.length > 0) {\n          // content is defined\n          op.content = _content\n          op.id = this.os.getNextOpId(_content.length)\n        } else {\n          // otherwise its a type\n          var typeid = this.os.getNextOpId(1)\n          this.os.createType(typeDefinition, typeid)\n          op.opContent = typeid\n          op.id = this.os.getNextOpId(1)\n        }\n        ops.push(op)\n        prevId = op.id\n      }\n      var eventHandler = this.eventHandler\n      this.os.requestTransaction(function *() {\n        // now we can set the right reference.\n        var mostRight\n        if (mostLeft != null) {\n          var ml = yield* this.getInsertionCleanEnd(mostLeft)\n          mostRight = ml.right\n        } else {\n          mostRight = (yield* this.getOperation(ops[0].parent)).start\n        }\n        for (var j = 0; j < ops.length; j++) {\n          var op = ops[j]\n          op.right = mostRight\n        }\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [ops])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(ops)\n    }\n    delete (pos, length) {\n      if (length == null) { length = 1 }\n      if (typeof length !== 'number') {\n        throw new Error('length must be a number!')\n      }\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos + length > this._content.length || pos < 0 || length < 0) {\n        throw new Error('The deletion range exceeds the range of the array!')\n      }\n      if (length === 0) {\n        return\n      }\n      var eventHandler = this.eventHandler\n      var dels = []\n      for (var i = 0; i < length; i = i + delLength) {\n        var targetId = this._content[pos + i].id\n        var delLength\n        // how many insertions can we delete in one deletion?\n        for (delLength = 1; i + delLength < length; delLength++) {\n          if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n            break\n          }\n        }\n        dels.push({\n          target: targetId,\n          struct: 'Delete',\n          length: delLength\n        })\n      }\n      this.os.requestTransaction(function *() {\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [dels])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(dels)\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    observeDeep (f) {\n      this._deepEventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    unobserveDeep (f) {\n      this._deepEventHandler.removeEventListener(f)\n    }\n    * _changed (transaction, op) {\n      if (!op.deleted) {\n        if (op.struct === 'Insert') {\n          // update left\n          var l = op.left\n          var left\n          while (l != null) {\n            left = yield* transaction.getInsertion(l)\n            if (!left.deleted) {\n              break\n            }\n            l = left.left\n          }\n          op.left = l\n          // if op contains opContent, initialize it\n          if (op.opContent != null) {\n            yield* transaction.store.initType.call(transaction, op.opContent)\n          }\n        }\n        this.eventHandler.receivedOp(op)\n      }\n    }\n  }\n\n  Y.extend('Array', new Y.utils.CustomTypeDefinition({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: function * YArrayInitializer (os, model) {\n      var _content = []\n      var _types = []\n      yield* Y.Struct.List.map.call(this, model, function (op) {\n        if (op.hasOwnProperty('opContent')) {\n          _content.push({\n            id: op.id,\n            type: op.opContent\n          })\n          _types.push(op.opContent)\n        } else {\n          op.content.forEach(function (c, i) {\n            _content.push({\n              id: [op.id[0], op.id[1] + i],\n              val: op.content[i]\n            })\n          })\n        }\n      })\n      for (var i = 0; i < _types.length; i++) {\n        var type = yield* this.store.initType.call(this, _types[i])\n        type._parent = model.id\n      }\n      return new YArray(os, model.id, _content)\n    },\n    createType: function YArrayCreateType (os, model) {\n      return new YArray(os, model.id, [])\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"]}