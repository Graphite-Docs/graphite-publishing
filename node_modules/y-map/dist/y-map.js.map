{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Map.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","yMap","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","extend","Y","YMap","_Y$utils$CustomType","os","model","contents","opContents","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","_model","id","_parent","_deepEventHandler","utils","EventListenerHandler","map","copyObject","eventHandler","EventHandler","op","oldValue","key","struct","parentSub","getType","left","compareIds","value","opContent","deleted","content","undefined","bubbleEvent","name","object","type","target","_inherits","_createClass","childId","_this2","keys","find","destroy","concat","right","del","modDel","requestTransaction","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","delegateYield","awaitOps","applyCreatedOperations","stop","awaitAndPrematurelyCall","insert","getNextOpId","origin","parent","typeDefinition","isTypeDefinition","createType","_callee2","_context2","_callee3","_context3","addEventListener","removeEventListener","path","observeProperty","event","propertyName","get","observe","unobserve","deleteChildObservers","resetObserverPath","set","Map","observePath","slice","observer","_changed","transaction","_context4","getOperation","t0","store","initType","receivedOp","CustomType","CustomTypeDefinition","class","YMapInitializer","_context5","t1","done","t2","abrupt","t3"],"mappings":"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","file":"y-map.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y /* :any */) {\n  class YMap extends Y.utils.CustomType {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n    constructor (os, model, contents, opContents) {\n      super()\n      this._model = model.id\n      this._parent = null\n      this._deepEventHandler = new Y.utils.EventListenerHandler()\n      this.os = os\n      this.map = Y.utils.copyObject(model.map)\n      this.contents = contents\n      this.opContents = opContents\n      this.eventHandler = new Y.utils.EventHandler(op => {\n        var oldValue\n        // key is the name to use to access (op)content\n        var key = op.struct === 'Delete' ? op.key : op.parentSub\n\n        // compute oldValue\n        if (this.opContents[key] != null) {\n          oldValue = this.os.getType(this.opContents[key])\n        } else {\n          oldValue = this.contents[key]\n        }\n        // compute op event\n        if (op.struct === 'Insert') {\n          if (op.left === null && !Y.utils.compareIds(op.id, this.map[key])) {\n            var value\n            // TODO: what if op.deleted??? I partially handles this case here.. but need to send delete event instead. somehow related to #4\n            if (op.opContent != null) {\n              value = this.os.getType(op.opContent)\n              value._parent = this._model\n              delete this.contents[key]\n              if (op.deleted) {\n                delete this.opContents[key]\n              } else {\n                this.opContents[key] = op.opContent\n              }\n            } else {\n              value = op.content[0]\n              delete this.opContents[key]\n              if (op.deleted) {\n                delete this.contents[key]\n              } else {\n                this.contents[key] = op.content[0]\n              }\n            }\n            this.map[key] = op.id\n            if (oldValue === undefined) {\n              Y.utils.bubbleEvent(this, {\n                name: key,\n                object: this,\n                type: 'add',\n                value: value\n              })\n            } else {\n              Y.utils.bubbleEvent(this, {\n                name: key,\n                object: this,\n                oldValue: oldValue,\n                type: 'update',\n                value: value\n              })\n            }\n          }\n        } else if (op.struct === 'Delete') {\n          if (Y.utils.compareIds(this.map[key], op.target)) {\n            delete this.opContents[key]\n            delete this.contents[key]\n            Y.utils.bubbleEvent(this, {\n              name: key,\n              object: this,\n              oldValue: oldValue,\n              type: 'delete'\n            })\n          }\n        } else {\n          throw new Error('Unexpected Operation!')\n        }\n      })\n    }\n    _getPathToChild (childId) {\n      return Object.keys(this.opContents).find(key =>\n        Y.utils.compareIds(this.opContents[key], childId)\n      )\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this.contents = null\n      this.opContents = null\n      this._model = null\n      this._parent = null\n      this.os = null\n      this.map = null\n    }\n    get (key) {\n      // return property.\n      // if property does not exist, return null\n      // if property is a type, return it\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      }\n      if (this.opContents[key] == null) {\n        return this.contents[key]\n      } else {\n        return this.os.getType(this.opContents[key])\n      }\n    }\n    keys () {\n      return Object.keys(this.contents).concat(Object.keys(this.opContents))\n    }\n    keysPrimitives () {\n      return Object.keys(this.contents)\n    }\n    keysTypes () {\n      return Object.keys(this.opContents)\n    }\n    /*\n      If there is a primitive (not a custom type), then return it.\n      Returns all primitive values, if propertyName is specified!\n      Note: modifying the return value could result in inconsistencies!\n        -- so make sure to copy it first!\n    */\n    getPrimitive (key) {\n      if (key == null) {\n        return Y.utils.copyObject(this.contents)\n      } else if (typeof key !== 'string') {\n        throw new Error('Key is expected to be a string!')\n      } else {\n        return this.contents[key]\n      }\n    }\n    getType (key) {\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      } else if (this.opContents[key] != null) {\n        return this.os.getType(this.opContents[key])\n      } else {\n        return null\n      }\n    }\n    delete (key) {\n      var right = this.map[key]\n      if (right != null) {\n        var del = {\n          target: right,\n          struct: 'Delete'\n        }\n        var eventHandler = this.eventHandler\n        var modDel = Y.utils.copyObject(del)\n        modDel.key = key\n        this.os.requestTransaction(function *() {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[del]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([modDel])\n      }\n    }\n    set (key, value) {\n      // set property.\n      // if property is a type, return it\n      // if not, apply immediately on this type an call event\n\n      var right = this.map[key] || null\n      var insert /* :any */ = {\n        id: this.os.getNextOpId(1),\n        left: null,\n        right: right,\n        origin: null,\n        parent: this._model,\n        parentSub: key,\n        struct: 'Insert'\n      }\n      var eventHandler = this.eventHandler\n      var typeDefinition = Y.utils.isTypeDefinition(value)\n      if (typeDefinition !== false) {\n        var type = this.os.createType(typeDefinition)\n        insert.opContent = type._model\n        // construct a new type\n        this.os.requestTransaction(function *() {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([insert])\n        return type\n      } else {\n        insert.content = [value]\n        this.os.requestTransaction(function * () {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([insert])\n        return value\n      }\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    observeDeep (f) {\n      this._deepEventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    unobserveDeep (f) {\n      this._deepEventHandler.removeEventListener(f)\n    }\n    /*\n      Observe a path.\n\n      E.g.\n      ```\n      o.set('textarea', Y.TextBind)\n      o.observePath(['textarea'], function(t){\n        // is called whenever textarea is replaced\n        t.bind(textarea)\n      })\n\n      returns a function that removes the observer from the path.\n    */\n    observePath (path, f) {\n      var self = this\n      var propertyName\n      function observeProperty (event) {\n        // call f whenever path changes\n        if (event.name === propertyName) {\n          // call this also for delete events!\n          f(self.get(propertyName))\n        }\n      }\n\n      if (path.length < 1) {\n        f(this)\n        return function () {}\n      } else if (path.length === 1) {\n        propertyName = path[0]\n        f(self.get(propertyName))\n        this.observe(observeProperty)\n        return function () {\n          self.unobserve(f)\n        }\n      } else {\n        var deleteChildObservers\n        var resetObserverPath = function () {\n          var map = self.get(path[0])\n          if (!(map instanceof YMap)) {\n            // its either not defined or a primitive value / not a map\n            map = self.set(path[0], Y.Map)\n          }\n          deleteChildObservers = map.observePath(path.slice(1), f)\n        }\n        var observer = function (event) {\n          if (event.name === path[0]) {\n            if (deleteChildObservers != null) {\n              deleteChildObservers()\n            }\n            if (event.type === 'add' || event.type === 'update') {\n              resetObserverPath()\n            }\n            // TODO: what about the delete events?\n          }\n        }\n        self.observe(observer)\n        resetObserverPath()\n        // returns a function that deletes all the child observers\n        // and how to unobserve the observe from this object\n        return function () {\n          if (deleteChildObservers != null) {\n            deleteChildObservers()\n          }\n          self.unobserve(observer)\n        }\n      }\n    }\n    * _changed (transaction, op) {\n      if (op.struct === 'Delete') {\n        if (op.key == null) {\n          var target = yield* transaction.getOperation(op.target)\n          op.key = target.parentSub\n        }\n      } else if (op.opContent != null) {\n        yield* transaction.store.initType.call(transaction, op.opContent)\n      }\n      this.eventHandler.receivedOp(op)\n    }\n  }\n  Y.extend('Map', new Y.utils.CustomTypeDefinition({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: function * YMapInitializer (os, model) {\n      var contents = {}\n      var opContents = {}\n      var map = model.map\n      for (var name in map) {\n        var op = yield* this.getOperation(map[name])\n        if (op.deleted) continue\n        if (op.opContent != null) {\n          opContents[name] = op.opContent\n          var type = yield* this.store.initType.call(this, op.opContent)\n          type._parent = model.id\n        } else {\n          contents[name] = op.content[0]\n        }\n      }\n      return new YMap(os, model, contents, opContents)\n    },\n    createType: function YMapCreator (os, model) {\n      return new YMap(os, model, {}, {})\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"]}